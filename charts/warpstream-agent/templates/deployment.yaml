apiVersion: apps/v1
kind: {{ include "warpstream-agent.deploymentKind" . }}
metadata:
  name: {{ include "warpstream-agent.fullname" . }}
  labels:
    {{- include "warpstream-agent.labels" . | nindent 4 }}
spec:
  {{- if .Values.config.playground }}
  replicas: 1
  {{- else if and (not .Values.autoscaling.enabled) (.Values.replicas) }}
  replicas: {{ .Values.replicas }}
  {{- end }}
  {{- if eq (include "warpstream-agent.deploymentKind" .) "StatefulSet" }}
  serviceName: {{ include "warpstream-agent.fullname" . }}-headless
  {{- end }}
  {{- if eq (include "warpstream-agent.deploymentKind" .) "Deployment" }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "warpstream-agent.selectorLabels" . | nindent 6 }}
  {{- if eq (include "warpstream-agent.deploymentKind" .) "Deployment" }}
  {{- with .Values.deploymentStrategy }}
  strategy:
    {{- toYaml . | trim | nindent 4 }}
  {{- end }}
  {{- end }}
  {{- if eq (include "warpstream-agent.deploymentKind" .) "StatefulSet" }}
  podManagementPolicy: {{ .Values.statefulSetConfig.podManagementPolicy }}
  {{- with .Values.statefulSetConfig.updateStrategy }}
  updateStrategy:
    {{- toYaml . | trim | nindent 4 }}
  {{- end }}
  {{- end }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum   }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "warpstream-agent.selectorLabels" . | nindent 8 }}
        {{- if not (empty .Values.podLabels) }}
          {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.schedulerName }}
      schedulerName: {{ . }}
      {{- end }}
      serviceAccountName: {{ include "warpstream-agent.serviceAccountName" . }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            {{- if .Values.config.playground }}
            - playground
            {{- else }}
            - agent
            - -agentKeyPath=/app/agent-key/{{ include "warpstream-agent.agentKey.secretKey" . }}
            {{- end }}
            {{- range .Values.extraArgs }}
            - {{ . }}
            {{- end }}
          readinessProbe:
            httpGet:
              path: /v1/status
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /v1/status
              port: http
            initialDelaySeconds: 30
            failureThreshold: 5
            periodSeconds: 5
          resources:
            {{- $cpuMillicoresRequest := .Values.resources.requests.cpu | include "convertToMillicores" -}}
            {{- $goMaxProcs := divf $cpuMillicoresRequest 1000 -}}
            {{- $goMaxProcs := ceil $goMaxProcs -}}
            {{- if .Values.enforceProductionResourceRequirements}}
            {{- $memoryRequest := .Values.resources.requests.memory | include "convertToBytes" -}}
            {{- $memoryPerMillicore := divf $memoryRequest $cpuMillicoresRequest -}}
            {{- $memoryPerCPU := mulf $memoryPerMillicore 1000.0 -}}
            {{- $minMemoryPerCPU := 4000000000.0 -}}
            {{- if lt $memoryPerCPU $minMemoryPerCPU -}}
            {{ fail (printf "Memory request per CPU (%.2f GiB) is less than the required 4 GiB per CPU. Please increase the memory request." (divf $memoryPerCPU 1073741824)) }}
            {{- end -}}
            {{- end -}}
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{ if eq (include "warpstream-agent.deploymentKind" .) "StatefulSet" }}
            - name: WARPSTREAM_DISCOVERY_KAFKA_HOSTNAME_OVERRIDE
              value: $(MY_POD_NAME).{{ include "warpstream-agent.fullname" . }}-headless.{{ .Release.Namespace }}.svc.{{ .Values.statefulSetConfig.clusterDomain }}
            {{ end -}}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            {{- if and .Values.resources (not .Values.goMaxProcs) }}
            {{- if .Values.resources.requests }}
            - name: GOMAXPROCS
              value: {{ $goMaxProcs | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.goMaxProcs }}
            - name: GOMAXPROCS
              value: {{ .Values.goMaxProcs | quote }}
            {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
          envFrom:
          {{- if ne .Values.config.configMapEnabled false }}
            - configMapRef:
                name: {{ include "warpstream-agent.fullname" . }}
          {{- else }}
            - secretRef:
                name: {{ include "warpstream-agent.secretName" . }}
          {{- end }}
          ports:
            - name: kafka
              containerPort: 9092
              protocol: TCP
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: schema-registry
              containerPort: 9094
              protocol: TCP
          {{- if or (.Values.volumeMounts) (not .Values.config.playground)  }}
          volumeMounts:
            {{- if not .Values.config.playground }}
            - name: agent-key
              mountPath: /app/agent-key
              readOnly: true
            {{- end }}
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hostAliases  }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or (.Values.volumes) (not .Values.config.playground)  }}
      volumes:
        {{- if not .Values.config.playground }}
        - name: agent-key
          secret:
            secretName: {{ include "warpstream-agent.agentKey.secretName" . }}
        {{- end }}
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
